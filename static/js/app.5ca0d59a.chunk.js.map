{"version":3,"sources":["api/firebase.ts","components/MouseArrow.tsx","components/GraphEditor.tsx","components/GetNameDialog.tsx","App.tsx"],"names":["app","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","getAnalytics","getFirestore","PATHS","updateUser","variables","a","async","user","ref","doc","id","setDoc","err","console","log","deleteUser","deleteDoc","MouseArrow","position","label","color","React","useMemo","randomColor","Math","floor","random","toString","Color","rgbNumber","draw","useCallback","g","drawArrowHead","graphics","fill","to","x","y","unitVector","Graphics","Text","text","radius","bottomCenter","Vector","fromObject","unitDistanceVec","multiplyScalar","perpendicularUnitDistanceVec","clone","rotate","PI","leftControlPoint","add","rightControlPoint","topControlPoint","beginFill","drawPolygon","PIXI","endFill","PROJECT_ID","MyGraphEditor","props","width","height","userName","useImmer","users","state","updateState","userId","R","localDataRef","useRef","mousePosition","useController","nodes","edges","networkStatistics","local","onEvent","draft","type","payload","elementId","graphEditor","graphRef","cy","update","element","context","$id","getSelectedItemByElement","item","index","EVENT","UPDATE_DATA","value","getSelectedElementInfo","selectedItem","updateDoc","data","API","ADD_NODE","items","edgeItems","forEach","mode","EDITOR_MODE","ADD","DEFAULT","DELETE_NODE","itemIds","DELETE","ADD_EDGE","DELETE_EDGE","controllerProps","controller","graphEditorRef","removeUser","current","createUser","name","config","useSubscription","collection","onSnapshot","querySnapshot","docChanges","change","elementType","event","targetList","push","filter","edgeItem","source","target","useEffect","handleWindowChange","e","document","visibilityState","focusHandler","blurHandler","visibilityChangeHandler","beforeUnloadHandler","window","addEventListener","isTrackRef","interval","setInterval","debounced","getPointerPositionOnViewport","viewport","onMouseMove","clearInterval","removeEventListener","style","map","GetNameDialog","onSubmit","useState","setName","Dialog","open","DialogTitle","DialogContent","TextField","autoFocus","margin","fullWidth","variant","onChange","DialogActions","Button","onClick","App","useLayout","onLayout","isLoading","View","styles","container","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent"],"mappings":"0RA2BMA,EAAMC,YAZW,CACrBC,OAAQ,0CACRC,WAAY,qCACZC,YAAa,4CACbC,UAAW,qBACXC,cAAe,iCACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAMXC,GADYC,YAAaX,GACbY,YAAaZ,IAEzBa,EACM,WADNA,EAEG,QAFHA,EAGG,QAHHA,EAIG,QAuLF,SAAeC,EAAWC,GAA1B,mBAAAC,EAAAC,OAAA,gDAEHC,EAEEH,EAFFG,KACAb,EACEU,EADFV,UAEF,IACQc,EAAMC,YAAIV,EAAaG,EAAd,IAAgCR,EAAhC,IAA6CQ,EAA7C,IAA4DK,EAAKG,IAChFC,YACEH,EACAD,GAEF,MAAOK,GACPC,QAAQC,IAAI,qBAAsBF,GAZ/B,4DAqBA,SAAeG,EAAWX,GAA1B,mBAAAC,EAAAC,OAAA,gDAEHI,EAEEN,EAFFM,GACAhB,EACEU,EADFV,UAEF,IACQc,EAAMC,YAAIV,EAAaG,EAAd,IAAgCR,EAAhC,IAA6CQ,EAA7C,IAA4DQ,GAC3EM,YACER,GAEF,MAAOI,GACPC,QAAQC,IAAI,uBAAwBF,GAXjC,4DAeA,I,iEC/OMK,EAAwC,SAAC,GAA+B,IAA7BV,EAA4B,EAA5BA,KAAMW,EAAsB,EAAtBA,SAAUC,EAAY,EAAZA,MAChEC,EAAQC,IAAMC,SAAQ,WAE1B,IAAIC,EAAW,IAAOC,KAAKC,MAAoB,SAAdD,KAAKE,UAAmBC,SAAS,IAElE,OADAd,QAAQC,IAAI,IAAKS,EAAaK,IAAML,GAAaM,aAC1CD,IAAML,GAAaM,cACxB,CAACtB,EAAKG,KACJoB,EAAOT,IAAMU,aAAY,SAAAC,GAM7BC,EAAc,CACZC,SAAUF,EACVG,KAAMf,EACNgB,GAAI,CAACC,EAAG,EAAGC,EAAG,GACdC,WAAY,CAAEF,GAAI,EAAGC,GAAI,OAE1B,CAAClB,IAEJ,OACE,eAAC,YAAD,CACEiB,EAAGnB,EAASmB,EACZC,EAAGpB,EAASoB,EAFd,UAIE,cAAC,IAAME,SAAP,CAAgBV,KAAMA,IACtB,cAAC,IAAMW,KAAP,CAAYC,KAAMvB,QAKlBc,EAAgB,SAAC,GAYhB,IAXLC,EAWI,EAXJA,SACAE,EAUI,EAVJA,GAUI,IATJO,cASI,MATK,GASL,EARJJ,EAQI,EARJA,WACAJ,EAOI,EAPJA,KAQMS,EAAeC,IAAOC,WAAWV,GACjCW,EAAkBF,IAAOC,WAAWP,GAAYS,eAAeL,GAC/DM,EAA+BF,EAAgBG,QAAQC,QAAQ3B,KAAK4B,GAAK,GACzEC,EAAmBJ,EACtBC,QACAF,gBAAgB,GAChBM,IAAIV,GACDW,EAAoBN,EAA6BC,QAAQI,IAAIV,GAC7DY,EAAkBZ,EAAaM,QAAQI,IAAIP,GACjDb,EAASuB,UAAUtB,GACnBD,EAASwB,YACP,IAAIC,IAAWN,EAAiBhB,EAAGgB,EAAiBf,GACpD,IAAIqB,IAAWJ,EAAkBlB,EAAGkB,EAAkBjB,GACtD,IAAIqB,IAAWH,EAAgBnB,EAAGmB,EAAgBlB,IAGpDJ,EAAS0B,W,ikBChEX,IAAMC,EAAa,uCAaZ,SAASC,EAAcC,GAC5B,IACEC,EAGED,EAHFC,MACAC,EAEEF,EAFFE,OACAC,EACEH,EADFG,SAEF,EAA6BC,YAAS,CACpCC,MAAO,KADT,WAAOC,EAAP,KAAcC,EAAd,KAGMC,EAASlD,IAAMC,SAAQ,kBAAMkD,QAAU,IACvCC,EAAepD,IAAMqD,OAAO,CAChCnE,KAAM,KACNoE,cAAe,CACbtC,EAAG,EACHC,EAAG,KAGP,EAAsCsC,YAAc,CAClDC,MAAO,GACPC,MAAO,GACPC,kBAAmB,CACjBC,MAAO,IAITC,QAAS,WAQNC,GAAW,IAAD,EAPXC,EAOW,EAPXA,KACAC,EAMW,EANXA,QACAC,EAKW,EALXA,UAEAC,GAGW,EAJXC,SAIW,EAHXD,aAKEE,GAFS,EAFXC,OAEW,EADXpB,MAKIiB,EAFFE,IAGIE,GADFJ,EADFK,QAEcH,EAAGI,IAAIP,IACvB,WAGKK,GAAWG,YAAyBH,EAASR,IAHlD,EAG6D,GAH7D,EACEY,KADF,EAEEC,MAEF,OAAQZ,GACN,KAAKa,IAAMC,YACT,IACEC,EACEd,EADFc,MAEF,EAEIC,YAAuBjB,EAAOI,GADhCH,EADF,EACEA,KAAMiB,EADR,EACQA,aAmBR,MAjBa,UAATjB,EFyDP,SAA0B/E,GAA1B,YAAAC,EAAAC,OAAA,gDAEHwF,EAEE1F,EAFF0F,KACApG,EACEU,EADFV,UAEF,IACQc,EAAMC,YAAIV,EAAaG,EAAd,IAAgCR,EAAhC,IAA6CQ,EAA7C,IAA4D4F,EAAKpF,IAChF2F,YACE7F,EACA,CACE8F,KAAMR,EAAKQ,OAGf,MAAO1F,GACPC,QAAQC,IAAI,uBAAwBF,GAdjC,4DExDK2F,CAAe,CACb7G,UAAWmE,EACXiC,KAAM,CACJpF,GAAI0F,EAAa1F,GACjB4F,KAAMJ,KFiHf,SAA0B9F,GAA1B,YAAAC,EAAAC,OAAA,gDAEHwF,EAEE1F,EAFF0F,KACApG,EACEU,EADFV,UAEF,IACQc,EAAMC,YAAIV,EAAaG,EAAd,IAAgCR,EAAhC,IAA6CQ,EAA7C,IAA4D4F,EAAKpF,IAChF2F,YACE7F,EACA,CACE8F,KAAMR,EAAKQ,OAGf,MAAO1F,GACPC,QAAQC,IAAI,uBAAwBF,GAdjC,4DE7GK2F,CAAe,CACb7G,UAAWmE,EACXiC,KAAM,CACJpF,GAAI0F,EAAc1F,GAClB4F,KAAMJ,MAIL,EAET,KAAKF,IAAMQ,SACT,IACEC,EAEErB,EAFFqB,MAEErB,EADFsB,UAmBF,OATAD,EAAME,SAAQ,SAACb,IFblB,SAA0B1F,GAA1B,YAAAC,EAAAC,OAAA,gDAEHZ,EAEEU,EAFFV,UACAoG,EACE1F,EADF0F,KAEF,IACatB,MACLhE,EAAMC,YAAIV,EAAaG,EAAd,IAAgCR,EAAhC,IAA6CQ,EAA7C,IAA4D4F,EAAKpF,IAChFC,YACEH,EACAsF,GAEF,MAAOlF,GACPC,QAAQC,IAAI,uBAAwBF,GAbjC,4DEcK2F,CAAe,CACb7G,UAAWmE,EACXiC,YAGAZ,EAAM0B,OAASC,IAAYC,MAC7B5B,EAAM0B,KAAOC,IAAYE,UAEpB,EAET,KAAKf,IAAMgB,YACT,MAEI5B,EADF6B,eADF,MACY,GADZ,EAoBA,OAfApG,QAAQC,IAAI,KAAMmG,GAMlBA,EAAQN,SAAQ,SAACjG,IFfpB,SAA0BN,GAA1B,YAAAC,EAAAC,OAAA,gDAEHI,EAEEN,EAFFM,GACAhB,EACEU,EADFV,UAEF,IACQc,EAAMC,YAAIV,EAAaG,EAAd,IAAgCR,EAAhC,IAA6CQ,EAA7C,IAA4DQ,GAC3EM,YAAUR,GACV,MAAOI,GACPC,QAAQC,IAAI,uBAAwBF,GATjC,4DEgBK2F,CAAe,CACb7G,UAAWmE,EACXnD,UAGAwE,EAAM0B,OAASC,IAAYK,SAC7BhC,EAAM0B,KAAOC,IAAYE,UAEpB,EAET,KAAKf,IAAMmB,SAaT,OAVI/B,EADFqB,MAEIE,SAAQ,SAACb,IFUlB,SAA0B1F,GAA1B,YAAAC,EAAAC,OAAA,gDAEHZ,EAEEU,EAFFV,UACAoG,EACE1F,EADF0F,KAEF,IACatB,MACLhE,EAAMC,YAAIV,EAAaG,EAAd,IAAgCR,EAAhC,IAA6CQ,EAA7C,IAA4D4F,EAAKpF,IAChFC,YACEH,EACAsF,GAEF,MAAOlF,GACPC,QAAQC,IAAI,uBAAwBF,GAbjC,4DETK2F,CAAe,CACb7G,UAAWmE,EACXiC,YAGAZ,EAAM0B,OAASC,IAAYC,MAC7B5B,EAAM0B,KAAOC,IAAYE,UAEpB,EAET,KAAKf,IAAMoB,YACT,MAEIhC,EADF6B,QAaF,YAdA,MACY,GADZ,GAKQN,SAAQ,SAACjG,IFcpB,SAA0BN,GAA1B,YAAAC,EAAAC,OAAA,gDAEHI,EAEEN,EAFFM,GACAhB,EACEU,EADFV,UAEF,IACQc,EAAMC,YAAIV,EAAaG,EAAd,IAAgCR,EAAhC,IAA6CQ,EAA7C,IAA4DQ,GAC3EM,YAAUR,GACV,MAAOI,GACPC,QAAQC,IAAI,uBAAwBF,GATjC,4DEbK2F,CAAe,CACb7G,UAAWmE,EACXnD,UAGAwE,EAAM0B,OAASC,IAAYK,SAC7BhC,EAAM0B,KAAOC,IAAYE,UAEpB,MAlIf,WAAOM,EAAP,KAAwBC,EAAxB,KA6IMC,EAAiBF,EAAgB7G,IACjCgH,EAAanG,IAAMU,aAAY,WACnC0C,EAAagD,QAAQlH,KAAO,KAC5BgG,EAAe,CACb7G,UAAWmE,EACXnD,GAAI6D,MAEL,CAACA,IACGmD,EAAarG,IAAMU,aAAY,WACpC,IAAMxB,EAAO,CACXG,GAAI6D,EACJoD,KAAMzD,EACNhD,SAAUuD,EAAagD,QAAQ9C,eAOjC,OALAF,EAAagD,QAAQlH,KAAOA,EAC5BgG,EAAe,CACb7G,UAAWmE,EACXtD,SAEKA,IACN,CAACgE,IAqKJ,OFhUoC,SAACqD,GACrC,IACG3C,EAEC2C,EAFD3C,QACAvF,EACCkI,EADDlI,UAUHmI,aAAgB,WACd,IAAMrH,EAAMsH,YAAW/H,EAAcG,EAAf,IAAiCR,EAAjC,IAA8CQ,GACpE6H,YAAWvH,GAAI,SAAAwH,GACbA,EAAcC,aAAatB,SAAQ,SAAAuB,GACjC,IAAM5B,EAAO4B,EAAOzH,IAAI6F,OACxBrB,EAAQ,CACNkD,YAAa,QACb7B,OACAnB,KAAM+C,EAAO/C,gBAMrB0C,aAAgB,WACd,IAAMrH,EAAMsH,YAAW/H,EAAcG,EAAf,IAAiCR,EAAjC,IAA8CQ,GACpE6H,YAAWvH,GAAI,SAAAwH,GACbA,EAAcC,aAAatB,SAAQ,SAAAuB,GACjC,IAAM5B,EAAO4B,EAAOzH,IAAI6F,OACxBrB,EAAQ,CACNkD,YAAa,QACb7B,OACAnB,KAAM+C,EAAO/C,gBEyHrBoB,CAA2B,CACzB7G,UAAWmE,EACXoB,QAAS,SAACmD,GACP,IACCjD,EAGGiD,EAHHjD,KACAmB,EAEG8B,EAFH9B,KACA6B,EACGC,EADHD,YAEDb,EAAW7B,QAAO,SAACP,GAClB,IAAMmD,EAAanD,EAAMiD,GACzB,OAAQhD,GACN,IAAK,QACHkD,EAAWC,KAAKhC,GAChB,MACF,IAAK,WACH+B,EAAW1B,SACT,SAACb,EAAMC,GACDD,EAAKpF,KAAO4F,EAAK5F,KACnB2H,EAAWtC,GAASO,MAK1B,MAEF,IAAK,UACHpB,EAAMiD,GAAeE,EAAWE,QAC9B,SAACzC,GAAD,OAAUA,EAAKpF,KAAO4F,EAAK5F,MAET,UAAhByH,IACFjD,EAAMJ,MAAQI,EAAMJ,MAAMyD,QAC5B,SAACC,GAAD,OAAclC,EAAK5F,KAAM8H,EAASC,QAC7BnC,EAAK5F,KAAO8H,EAASE,kBFkBH,SAACd,GAClC,IACG3C,EAEC2C,EAFD3C,QACAvF,EACCkI,EADDlI,UAEHmI,aAAgB,WACd,IAAMrH,EAAMsH,YAAW/H,EAAcG,EAAf,IAAiCR,EAAjC,IAA8CQ,GACpE6H,YAAWvH,GAAI,SAAAwH,GACbA,EAAcC,aAAatB,SAAQ,SAAAuB,GACjC,IAAM5B,EAAO4B,EAAOzH,IAAI6F,OACxBrB,EAAQ,CACNkD,YAAa,QACb7B,OACAnB,KAAM+C,EAAO/C,gBEpBrBoB,CAAwB,CACtB7G,UAAWmE,EACXoB,QAAS,SAACmD,GACP,IACCjD,EAGGiD,EAHHjD,KACAmB,EAEG8B,EAFH9B,KAEG8B,EADHD,YAEG7B,EAAK5F,KAAO6D,GAGhBD,GAAY,SAACY,GACZ,OAAQC,GACN,IAAK,QACHD,EAAMd,MAAMkE,KAAKhC,GACjB,MACF,IAAK,WACHpB,EAAMd,MAAMuC,SACV,SAACb,EAAMC,GACDD,EAAKpF,KAAO4F,EAAK5F,KACnBwE,EAAMd,MAAM2B,GAASO,MAI3B,MAEF,IAAK,UACHpB,EAAMd,MAAQc,EAAMd,MAAMmE,QACxB,SAACzC,GAAD,OAAUA,EAAKpF,KAAO4F,EAAK5F,aAUvCW,IAAMsH,WAAU,WACd,IAAMC,EAAqB,SAACzD,GAAD,OAAkB,SAAC0D,GAC5C,OAAQ1D,GACN,IAAK,mBAC8B,YAA7B2D,SAASC,gBACXrB,IAEAF,IAEF,MACF,IAAK,QACHE,IACA,MACF,IAAK,OAGL,IAAK,OAGL,IAAK,eACHF,IAMJ3G,QAAQC,IAAI,eAAgB+H,KAExBG,EAAeJ,EAAmB,SAClCK,EAAcL,EAAmB,QACjCM,EAA0BN,EAAmB,oBAC7CO,EAAsBP,EAAmB,gBAC/CQ,OAAOC,iBAAiB,mBAAoBH,GAAyB,GACrEE,OAAOC,iBAAiB,OAAQJ,GAAa,GAC7CG,OAAOC,iBAAiB,QAASL,GAAc,GAC/CI,OAAOC,iBAAiB,eAAgBF,GAAqB,GAC7D,IAAIG,EAAa,CACf7B,SAAS,GAEL8B,EAAWC,aAAY,WAC3BF,EAAW7B,SAAU,IACpB,KACGgC,EAAYjF,KAAW,SAAC4D,GAExBkB,EAAW7B,SAAU,EACrB,IAAMvG,EAAWwI,YACfnC,EAAeE,QAAQkC,SACvBvB,GAEF7B,EAAe,CACb7G,UAAWmE,EACXtD,KAAM,CACJG,GAAI6D,EACJoD,KAAMzD,EACNhD,gBAIL,KACC0I,EAAc,SAACxB,GACnB3D,EAAagD,QAAQ9C,cAAgB+E,YACnCnC,EAAeE,QAAQkC,SACvBvB,GAEG3D,EAAagD,QAAQlH,MACxBmH,IAEF+B,EAAUrB,IAGZ,OADAU,SAASO,iBAAiB,YAAaO,GAChC,WACLrD,EAAe,CACb7G,UAAWmE,EACXnD,GAAI6D,IAENsF,cAAcN,GACdT,SAASgB,oBAAoB,YAAaF,GAC1CR,OAAOU,oBAAoB,mBAAoBZ,GAAyB,GACxEE,OAAOU,oBAAoB,OAAQb,GAAa,GAChDG,OAAOU,oBAAoB,QAASd,GAAc,GAClDI,OAAOU,oBAAoB,eAAgBX,GAAqB,MAEjE,IAED,cAAC,IAAD,KACEY,MAAO,CAAE/F,QAAOC,WACZoD,GAFN,aAKIhD,EAAMD,MAAM4F,KAAI,SAACzJ,GAAD,OAAUgE,IAAWhE,EAAKG,IAUxC,cAAC,EAAD,CAEEH,KAAMA,EACNa,MAAO,SACPF,SAAUX,EAAKW,SACfC,MAAOZ,EAAKoH,MAJPpH,EAAKG,U,0DCrXRuJ,EAAgB,SAAClG,GAC7B,IACEmG,EACEnG,EADFmG,SAEF,EAAwB7I,IAAM8I,SAAS,IAAvC,WAAOxC,EAAP,KAAayC,EAAb,KACA,OACI,eAACC,EAAA,EAAD,CAAQC,MAAM,EAAd,UACE,cAACC,EAAA,EAAD,4BACA,cAACC,EAAA,EAAD,UAKE,cAACC,EAAA,EAAD,CACEC,WAAS,EACTC,OAAO,QACPjK,GAAG,OACHS,MAAM,YACNyJ,WAAS,EACTC,QAAQ,WACR3E,MAAOyB,EACPmD,SAAU,SAAAjC,GAAC,OAAIuB,EAAQvB,EAAEH,OAAOxC,YAGpC,cAAC6E,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAQC,QAAS,kBAAMf,EAASvC,IAAhC,yBC7BK,SAASuD,IACtB,MAIIC,cAHFnH,EADF,EACEA,MACAC,EAFF,EAEEA,OACAmH,EAHF,EAGEA,SAEF,EAA6BjH,YAAS,CACpCkH,WAAW,EACX1D,KAAM,KAFR,WAAOtD,EAAP,KAAcC,EAAd,KAIA,OACE,cAACgH,EAAA,EAAD,CACEvB,MAAOwB,EAAOC,UACdJ,SAAUA,EAFZ,SAKG/G,EAAMgH,UAEH,cAAC,EAAD,CACEnB,SAAU,SAACvC,GACTrD,GAAY,SAACY,GACXA,EAAMmG,WAAY,EAClBnG,EAAMyC,KAAOA,QAMrB,cAAC7D,EAAD,CAEIE,QACAC,SAEFC,SAAUG,EAAMsD,SAQ1B,IAAM4D,EAASE,IAAWC,OAAO,CAC/BF,UAAW,CACTG,KAAM,EACNC,gBAAiB,OACjBC,WAAY,SACZC,eAAgB,a","file":"static/js/app.5ca0d59a.chunk.js","sourcesContent":["// Import the functions you need from the SDKs you need\nimport { initializeApp } from \"firebase/app\";\nimport { getAnalytics } from \"firebase/analytics\";\nimport { \n  getFirestore, addDoc, updateDoc, doc,\n  onSnapshot, collection,  deleteDoc, setDoc,\n } from \"firebase/firestore\";\nimport { useSubscription,  } from 'colay-ui'\nimport { Position,  } from 'colay-ui/type'\nimport * as R from 'colay/ramda'\n// TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n\n// Your web app's Firebase configuration\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nconst firebaseConfig = {\n  apiKey: \"AIzaSyB8I11ntIAhLCoz2iw2cWVZl6NoWQ44yR0\",\n  authDomain: \"perfectgraph-5c619.firebaseapp.com\",\n  databaseURL: \"https://perfectgraph-5c619.firebaseio.com\",\n  projectId: \"perfectgraph-5c619\",\n  storageBucket: \"perfectgraph-5c619.appspot.com\",\n  messagingSenderId: \"214633043236\",\n  appId: \"1:214633043236:web:fa42d761199303b786cfb1\",\n  measurementId: \"G-GYX9R6E88Y\"\n};\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\nconst analytics = getAnalytics(app);\nconst firestore = getFirestore(app);\n\nconst PATHS = {\n  projects: 'projects',\n  nodes: 'nodes',\n  edges: 'edges',\n  users: 'users',\n}\n\ntype Event = {\n  type: string;\n  elementType: 'nodes' | 'edges' | 'users';\n  data: any\n}\ntype SubscriptionConfig = {\n  projectId: string;\n  onEvent: (event: Event) => void;\n}\n\nexport const useProjectSubscription = (config: SubscriptionConfig) => { \n  const {\n     onEvent,\n     projectId,\n  } = config\n  // useSubscription(() => {\n  //   const ref = doc(firestore, `${PATHS.projects}/${projectId}`)\n  //     onSnapshot(ref,querySnapshot => {\n  //       const data = querySnapshot.data()\n\n  //     });\n  // })\n  // NODES\n  useSubscription(() => {\n    const ref = collection(firestore, `${PATHS.projects}/${projectId}/${PATHS.nodes}`)\n    onSnapshot(ref,querySnapshot => {\n      querySnapshot.docChanges().forEach(change => {\n        const data = change.doc.data()\n        onEvent({\n          elementType: 'nodes',\n          data,\n          type: change.type,\n        })\n      });\n    });\n  })\n  // EDGES\n  useSubscription(() => {\n    const ref = collection(firestore, `${PATHS.projects}/${projectId}/${PATHS.edges}`)\n    onSnapshot(ref,querySnapshot => {\n      querySnapshot.docChanges().forEach(change => {\n        const data = change.doc.data()\n        onEvent({\n          elementType: 'edges',\n          data,\n          type: change.type,\n        })\n      });\n    });\n  })\n  \n}\n\ntype CreateNodeVariables = {\n  projectId: string;\n  item: any\n}\nexport async function createNode(variables: CreateNodeVariables) {\n  const {\n    projectId,\n    item\n  } = variables\n  try {\n    const id = R.uuid()\n    const ref = doc(firestore,`${PATHS.projects}/${projectId}/${PATHS.nodes}/${item.id}`)\n    setDoc(\n      ref,\n      item,\n    )\n  } catch (err) {\n    console.log('error creating node:', err)\n  }\n}\n\ntype DeleteNodeVariables = {\n  id: string;\n  projectId: string;\n}\nexport async function deleteNode(variables: DeleteNodeVariables) {\n  const { \n    id,\n    projectId,\n  } = variables\n  try {\n    const ref = doc(firestore,`${PATHS.projects}/${projectId}/${PATHS.nodes}/${id}`)\n    deleteDoc(ref)\n  } catch (err) {\n    console.log('error creating node:', err)\n  }\n}\n\ntype UpdateNodeVariables = {\n  item: any;\n  projectId: string;\n}\nexport async function updateNode(variables: UpdateNodeVariables) {\n  const {\n    item,\n    projectId,\n  } = variables\n  try {\n    const ref = doc(firestore,`${PATHS.projects}/${projectId}/${PATHS.nodes}/${item.id}`)\n    updateDoc(\n      ref,\n      {\n        data: item.data\n      }\n    )\n  } catch (err) {\n    console.log('error creating node:', err)\n  }\n}\n\n\ntype CreateEdgeVariables = {\n  projectId: string;\n  item: any\n}\nexport async function createEdge(variables: CreateEdgeVariables) {\n  const {\n    projectId,\n    item\n  } = variables\n  try {\n    const id = R.uuid()\n    const ref = doc(firestore,`${PATHS.projects}/${projectId}/${PATHS.edges}/${item.id}`)\n    setDoc(\n      ref,\n      item\n    )\n  } catch (err) {\n    console.log('error creating node:', err)\n  }\n}\n\ntype DeleteEdgeVariables = {\n  id: string;\n  projectId: string;\n}\nexport async function deleteEdge(variables: DeleteEdgeVariables) {\n  const { \n    id,\n    projectId,\n  } = variables\n  try {\n    const ref = doc(firestore,`${PATHS.projects}/${projectId}/${PATHS.edges}/${id}`)\n    deleteDoc(ref)\n  } catch (err) {\n    console.log('error creating node:', err)\n  }\n}\n\ntype UpdateEdgeVariables = {\n  item: any;\n  projectId: string;\n}\nexport async function updateEdge(variables: UpdateEdgeVariables) {\n  const {\n    item,\n    projectId,\n  } = variables\n  try {\n    const ref = doc(firestore,`${PATHS.projects}/${projectId}/${PATHS.edges}/${item.id}`)\n    updateDoc(\n      ref,\n      {\n        data: item.data\n      }\n    )\n  } catch (err) {\n    console.log('error creating node:', err)\n  }\n}\n\n\ntype UpdateUserVariables = {\n  user: any;\n  projectId: string;\n}\n\nexport async function updateUser(variables: UpdateUserVariables) {\n  const {\n    user,\n    projectId,\n  } = variables\n  try {\n    const ref = doc(firestore,`${PATHS.projects}/${projectId}/${PATHS.users}/${user.id}`)\n    setDoc(\n      ref,\n      user\n    )\n  } catch (err) {\n    console.log('error update user:', err)\n  }\n}\n\ntype DeleteUserVariables = {\n  id: string;\n  projectId: string;\n}\n\nexport async function deleteUser(variables: DeleteUserVariables) {\n  const {\n    id,\n    projectId,\n  } = variables\n  try {\n    const ref = doc(firestore,`${PATHS.projects}/${projectId}/${PATHS.users}/${id}`)\n    deleteDoc(\n      ref,\n    )\n  } catch (err) {\n    console.log('error deleting user:', err)\n  }\n}\n\nexport const useUserSubscription = (config: SubscriptionConfig) => { \n  const {\n     onEvent,\n     projectId,\n  } = config\n  useSubscription(() => {\n    const ref = collection(firestore, `${PATHS.projects}/${projectId}/${PATHS.users}`)\n    onSnapshot(ref,querySnapshot => {\n      querySnapshot.docChanges().forEach(change => {\n        const data = change.doc.data()\n        onEvent({\n          elementType: 'users',\n          data,\n          type: change.type,\n        })\n      });\n    });\n  })\n}\n\n// export function onCreateNode(callback: (node: any) => void) {\n//   try {\n//      return API.graphql({\n//       query: ON_CREATE_NODE,\n//       authMode: API_AUTH_MODE.API_KEY,\n//     }).subscribe((nodeData) => {\n//       const nodeRaw = nodeData.value.data.onCreateNode\n//       callback(convertJSONStringFields(nodeRaw))\n//     })\n//   } catch (err) {\n//     console.log('error creating node:', err)\n//   }\n// }\n// export function onUpdateNode(callback: (node: any) => void) {\n//   try {\n//      return API.graphql({\n//       query: ON_UPDATE_NODE,\n//       authMode: API_AUTH_MODE.API_KEY,\n//     }).subscribe((nodeData) => {\n//       const nodeRaw = nodeData.value.data.onUpdateNode\n//       callback(convertJSONStringFields(nodeRaw))\n//     })\n//   } catch (err) {\n//     console.log('error creating node:', err)\n//   }\n// }\n\n// export function onDeleteNode(callback: (id: string) => void) {\n//   try {\n//     return API.graphql({\n//       query: ON_DELETE_NODE,\n//       authMode: API_AUTH_MODE.API_KEY,\n//     }).subscribe((nodeData) => {\n//       const nodeRaw = nodeData.value.data.onDeleteNode\n//       callback(nodeRaw.id)\n//     })\n//   } catch (err) {\n//     console.log('error creating node:', err)\n//   }\n// }\n\n// export function onCreateEdge(callback: (node: any) => void) {\n//   try {\n//      return API.graphql({\n//       query: ON_CREATE_EDGE,\n//       authMode: API_AUTH_MODE.API_KEY,\n//     }).subscribe((edgeData) => {\n//       const edgeRaw = edgeData.value.data.onCreateEdge\n//       callback(convertJSONStringFields(edgeRaw))\n//     })\n//   } catch (err) {\n//     console.log('error creating node:', err)\n//   }\n// }\n// export function onUpdateEdge(callback: (edge: any) => void) {\n//   try {\n//     return API.graphql({\n//       query: ON_UPDATE_EDGE,\n//       authMode: API_AUTH_MODE.API_KEY,\n//     }).subscribe((edgeData) => {\n//       const edgeRaw = edgeData.value.data.onUpdateEdge\n//       callback(convertJSONStringFields(edgeRaw))\n//     })\n//   } catch (err) {\n//     console.log('error creating node:', err)\n//   }\n// }\n// export function onDeleteEdge(callback: (id: string) => void) {\n//   try {\n//     return API.graphql({\n//       query: ON_DELETE_EDGE,\n//       authMode: API_AUTH_MODE.API_KEY,\n//     }).subscribe((edgeData) => {\n//       const edgeRaw = edgeData.value.data.onDeleteEdge\n//       callback(edgeRaw.id)\n//     })\n//   } catch (err) {\n//     console.log('error creating node:', err)\n//   }\n// }","import React from 'react'\nimport { Graph } from 'perfect-graph'\nimport { Position } from 'colay/type'\nimport * as PIXI from 'pixi.js'\nimport  Vector from 'victor'\nimport  { Container } from '@inlet/react-pixi'\nimport Color from 'color'\n\nexport type MouseArrowProps = { \n  user: {id: string;};\n  color: number;\n  position: Position;\n  label: string;\n}\n\nexport const MouseArrow: React.FC<MouseArrowProps> = ({ user, position, label }) => {\n  const color = React.useMemo(() => {\n\n    var randomColor = `#${Math.floor(Math.random()*16777215).toString(16)}`;\n    console.log('a', randomColor, Color(randomColor).rgbNumber())\n    return Color(randomColor).rgbNumber()\n  },  [user.id])\n  const draw = React.useCallback(g => {\n    // g.clear()\n    // g.beginFill(color)\n    // g.lineStyle(4, color, 1)\n    // g.moveTo(50, 50)\n    // g.endFill()\n    drawArrowHead({\n      graphics: g,\n      fill: color,\n      to: {x: 0, y: 0},\n      unitVector: { x: -2, y: -2 },\n    })\n  }, [color])\n  \n  return (\n    <Container\n      x={position.x}\n      y={position.y}\n    >\n      <Graph.Graphics draw={draw}/>\n      <Graph.Text text={label} />\n    </Container>\n  )\n}\n\nconst drawArrowHead = ({\n  graphics,\n  to,\n  radius = 10,\n  unitVector,\n  fill,\n}: {\n  graphics: PIXI.Graphics;\n  unitVector: Position;\n  to: Position;\n  radius?: number;\n  fill: number;\n}) => {\n  const bottomCenter = Vector.fromObject(to)\n  const unitDistanceVec = Vector.fromObject(unitVector).multiplyScalar(radius)\n  const perpendicularUnitDistanceVec = unitDistanceVec.clone().rotate(-Math.PI / 2)\n  const leftControlPoint = perpendicularUnitDistanceVec\n    .clone()\n    .multiplyScalar(-1)\n    .add(bottomCenter)\n  const rightControlPoint = perpendicularUnitDistanceVec.clone().add(bottomCenter)\n  const topControlPoint = bottomCenter.clone().add(unitDistanceVec)\n  graphics.beginFill(fill)\n  graphics.drawPolygon(\n    new PIXI.Point(leftControlPoint.x, leftControlPoint.y),\n    new PIXI.Point(rightControlPoint.x, rightControlPoint.y),\n    new PIXI.Point(topControlPoint.x, topControlPoint.y),\n  )\n  // TODO: Dont remove the endFill\n  graphics.endFill()\n  // TODO: Check the performance effect of this later\n  // graphics.isSprite = true\n}\n","import React from 'react'\nimport { Graph, GraphEditor, } from \"perfect-graph\";\nimport { DefaultTheme } from \"perfect-graph/core/theme\";\nimport { getSelectedItemByElement, getSelectedElementInfo } from \"perfect-graph/utils\";\nimport { EVENT, EDITOR_MODE } from \"perfect-graph/constants\";\nimport { useController } from \"perfect-graph/plugins/controller\";\nimport { getPointerPositionOnViewport } from \"perfect-graph/utils\";\nimport * as API from \"../api/firebase\";\nimport * as R from \"colay/ramda\";\nimport { useImmer } from \"colay-ui/hooks/useImmer\";\nimport { MouseArrow } from './MouseArrow'\n\nconst PROJECT_ID = 'daa9975c-6bdc-4ab3-9a01-2d1dca1f2290'\n\ntype User = {\n  id: string;\n  name: string;\n  position: {\n    x: number;\n    y: number;\n  }\n}\n\n\n\nexport function MyGraphEditor(props: any) {\n  const {\n    width,\n    height,\n    userName,\n  } = props\n  const [state, updateState] = useImmer({\n    users: [] as User[],\n  })\n  const userId = React.useMemo(() => R.uuid(), [])\n  const localDataRef = React.useRef({\n    user: null,\n    mousePosition: {\n      x: 0,\n      y: 0,\n    }\n  })\n  const [controllerProps, controller] = useController({\n    nodes: [],\n    edges: [],\n    networkStatistics: {\n      local: {\n\n      },\n    },\n    onEvent: ({\n      type,\n      payload,\n      elementId,\n      graphRef,\n      graphEditor,\n      update,\n      state,\n    }, draft) => {\n      const {\n        cy,\n        context: graphEditorContext\n      } = graphEditor\n      const element = cy.$id(elementId!)\n      const {\n        item: selectedItem,\n        index: selectedItemIndex,\n      } = (element && getSelectedItemByElement(element, draft)) ?? {}\n      switch (type) {\n        case EVENT.UPDATE_DATA: {\n          const {\n            value\n          } = payload\n          const {\n            type, selectedItem\n          } = getSelectedElementInfo(draft, graphEditor)\n          if (type === 'nodes') {\n            API.updateNode({\n              projectId: PROJECT_ID,\n              item: {\n                id: selectedItem.id,\n                data: value,\n              }\n            })\n          } else {\n            API.updateEdge({\n              projectId: PROJECT_ID,\n              item: {\n                id: selectedItem!.id,\n                data: value,\n              }\n            })\n          }\n          return false\n        }\n        case EVENT.ADD_NODE: {\n          const {\n            items,\n            edgeItems,\n          } = payload\n          // draft.nodes = draft.nodes.concat(items)\n          // draft.edges = draft.edges.concat(edgeItems ?? [])\n          // const { position } = payload\n          // draft.nodes.push({\n          //   id: `${draft.nodes.length + 1}`, // R.uuid(),\n          //   position,\n          //   data: [],\n          // })\n          items.forEach((item) => {\n            API.createNode({\n              projectId: PROJECT_ID,\n              item\n            })\n          })\n          if (draft.mode === EDITOR_MODE.ADD) {\n            draft.mode = EDITOR_MODE.DEFAULT\n          }\n          return false\n        }\n        case EVENT.DELETE_NODE: {\n          const {\n            itemIds = [],\n          } = payload as {\n            itemIds: string[]\n          }\n          console.log('AA', itemIds)\n          // draft.nodes = draft.nodes.filter((nodeItem) => !itemIds.includes(nodeItem.id))\n          // draft.edges = draft.edges.filter(\n          //   (edgeItem) => !itemIds.includes(edgeItem.source)\n          //   && !itemIds.includes(edgeItem.target),\n          // )\n          itemIds.forEach((id) => {\n            API.deleteNode({\n              projectId: PROJECT_ID,\n              id\n            })\n          })\n          if (draft.mode === EDITOR_MODE.DELETE) {\n            draft.mode = EDITOR_MODE.DEFAULT\n          }\n          return false\n        }\n        case EVENT.ADD_EDGE: {\n          const {\n            items,\n          } = payload\n          items.forEach((item) => {\n            API.createEdge({\n              projectId: PROJECT_ID,\n              item\n            })\n          })\n          if (draft.mode === EDITOR_MODE.ADD) {\n            draft.mode = EDITOR_MODE.DEFAULT\n          }\n          return false\n        }\n        case EVENT.DELETE_EDGE: {\n          const {\n            itemIds = [],\n          } = payload as {\n            itemIds: string[]\n          }\n          itemIds.forEach((id) => {\n            API.deleteEdge({\n              projectId: PROJECT_ID,\n              id\n            })\n          })\n          if (draft.mode === EDITOR_MODE.DELETE) {\n            draft.mode = EDITOR_MODE.DEFAULT\n          }\n          return false\n        }\n      //   case EVENT.MODE_CHANGED: {\n      //     targetNodeRef.current = null\n      //     break\n      //   }\n        default:\n          break;\n      }\n    }\n  });\n  const graphEditorRef = controllerProps.ref\n  const removeUser = React.useCallback(() => {\n    localDataRef.current.user = null\n    API.deleteUser({\n      projectId: PROJECT_ID,\n      id: userId\n    })\n  }, [userId])\n  const  createUser = React.useCallback(() => {\n    const user = {\n      id: userId,\n      name: userName,\n      position: localDataRef.current.mousePosition\n    }\n    localDataRef.current.user = user\n    API.updateUser({\n      projectId: PROJECT_ID,\n      user\n    })\n    return user\n  }, [userId])\n  API.useProjectSubscription({\n    projectId: PROJECT_ID,\n    onEvent: (event) => {\n       const {\n        type,\n        data,\n        elementType\n       } = event\n       controller.update((draft) => {\n        const targetList = draft[elementType]\n        switch (type) {\n          case 'added':\n            targetList.push(data)\n            break;\n          case 'modified':{\n            targetList.forEach(\n              (item, index) => {\n                if (item.id === data.id) {\n                  targetList[index] = data\n                }\n              }\n            )\n            // .filter((item) => item.id !== data.id)))\n            break;\n          }\n          case 'removed':\n            draft[elementType] = targetList.filter(\n              (item) => item.id !== data.id\n            )\n            if (elementType === 'nodes') {\n              draft.edges = draft.edges.filter(\n            (edgeItem) => data.id !==edgeItem.source\n              && data.id !== edgeItem.target,\n            )\n            }\n            break;\n        \n          default:\n            break;\n        }\n       })\n    }\n  })\n  API.useUserSubscription({\n    projectId: PROJECT_ID,\n    onEvent: (event) => {\n       const {\n        type,\n        data,\n        elementType\n       } = event\n       if (data.id === userId) {\n         return\n       }\n       updateState((draft) => {\n        switch (type) {\n          case 'added':\n            draft.users.push(data)\n            break;\n          case 'modified':{\n            draft.users.forEach(\n              (item, index) => {\n                if (item.id === data.id) {\n                  draft.users[index] = data\n                }\n              }\n            )\n            break;\n          }\n          case 'removed':\n            draft.users = draft.users.filter(\n              (item) => item.id !== data.id\n            )\n            break;\n        \n          default:\n            break;\n        }\n       })\n    }\n  })\n  React.useEffect(() => {\n    const handleWindowChange = (type: string) => (e) => {\n      switch (type) {\n        case 'visibilitychange':\n          if (document.visibilityState === 'visible') {\n            createUser()\n          } else {\n            removeUser()\n          }          \n          break;\n        case 'focus':\n          createUser()\n          break;\n        case 'blur':\n          removeUser()\n          break;\n        case 'blur':\n          removeUser()\n          break;\n        case 'beforeunload':\n          removeUser()\n          break;\n      \n        default:\n          break;\n      }\n      console.log('Focus change', e)\n    }\n    const focusHandler = handleWindowChange('focus')\n    const blurHandler = handleWindowChange('blur')\n    const visibilityChangeHandler = handleWindowChange('visibilitychange')\n    const beforeUnloadHandler = handleWindowChange('beforeunload')\n    window.addEventListener('visibilitychange', visibilityChangeHandler, false)\n    window.addEventListener('blur', blurHandler, false)\n    window.addEventListener('focus', focusHandler, false)\n    window.addEventListener('beforeunload', beforeUnloadHandler, false);\n    let isTrackRef = {\n      current: true\n    }\n    const interval = setInterval(() => {\n      isTrackRef.current = true\n    }, 1000)\n    const debounced = R.debounce((event) => {\n        // if (isTrackRef.current) {\n          isTrackRef.current = false\n          const position = getPointerPositionOnViewport(\n            graphEditorRef.current.viewport,\n            event\n          )\n          API.updateUser({\n            projectId: PROJECT_ID,\n            user: {\n              id: userId,\n              name: userName,\n              position\n            }\n          })\n        // }\n      }, 500)\n    const onMouseMove = (event) => {\n      localDataRef.current.mousePosition = getPointerPositionOnViewport(\n        graphEditorRef.current.viewport,\n        event\n      )\n      if (!localDataRef.current.user) {\n        createUser()\n      }\n      debounced(event)\n    }\n    document.addEventListener('mousemove', onMouseMove)\n    return () => {\n      API.deleteUser({\n        projectId: PROJECT_ID,\n        id: userId\n      })\n      clearInterval(interval)\n      document.removeEventListener('mousemove', onMouseMove)\n      window.removeEventListener('visibilitychange', visibilityChangeHandler, false)\n      window.removeEventListener('blur', blurHandler, false)\n      window.removeEventListener('focus', focusHandler, false)\n      window.removeEventListener('beforeunload', beforeUnloadHandler, false);\n    }\n  }, [])\n  return (\n    <GraphEditor\n      style={{ width, height }}\n      {...controllerProps}\n    >\n      {\n        state.users.map((user) => userId !== user.id && (\n          // <Graph.View\n          //   width={10}\n          //   height={10}\n          //   fill={DefaultTheme.palette.primary.main}\n          //   x={user.position.x}\n          //   y={user.position.y}\n          // >\n          //   <Graph.Text text={R.takeLast(4, user.id)} />\n          // </Graph.View>\n          <MouseArrow \n            key={user.id}\n            user={user}\n            color={0xff3300}\n            position={user.position}\n            label={user.name}\n          />\n        ))\n      }\n    </GraphEditor>\n  );\n}","import Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport TextField from '@mui/material/TextField';\nimport React from 'react';\n\nexport type GetNameDialogProps = { \n  onSubmit: (name: string) => void;\n}\n\nexport const  GetNameDialog = (props: GetNameDialogProps) => {\n  const {\n    onSubmit,\n  } = props\n  const [name, setName] = React.useState('');\n  return (\n      <Dialog open={true}>\n        <DialogTitle>Set Your Name</DialogTitle>\n        <DialogContent>\n          {/* <DialogContentText>\n            To subscribe to this website, please enter your email address here. We\n            will send updates occasionally.\n          </DialogContentText> */}\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"name\"\n            label=\"User name\"\n            fullWidth\n            variant=\"standard\"\n            value={name}\n            onChange={e => setName(e.target.value)}\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => onSubmit(name)}>Start</Button>\n        </DialogActions>\n      </Dialog>\n  );\n}","import React from 'react'\nimport { StatusBar } from 'expo-status-bar';\nimport { StyleSheet, Text, View } from 'react-native';\nimport { MyGraphEditor } from './components/GraphEditor'\nimport { GetNameDialog } from './components/GetNameDialog'\nimport {  useLayout } from 'colay-ui'\nimport {  useImmer } from 'colay-ui/hooks/useImmer'\n\nexport default function App() {\n  const {\n    width,\n    height,\n    onLayout,\n  } = useLayout()\n  const [state, updateState] = useImmer({\n    isLoading: true,\n    name: ''\n  })\n  return (\n    <View\n      style={styles.container}\n      onLayout={onLayout}\n    >\n     {\n       state.isLoading \n       ? (\n          <GetNameDialog \n            onSubmit={(name) => {\n              updateState((draft)=> {\n                draft.isLoading = false\n                draft.name = name\n              })\n            }}\n          />\n       )\n       : (\n        <MyGraphEditor\n          {...{\n            width,\n            height,\n          }}\n          userName={state.name}\n        />\n       )\n     }\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n"],"sourceRoot":""}